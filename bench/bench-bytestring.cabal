Cabal-Version:       2.2
Name:                bench-bytestring
Version:             0.1.0.0
Synopsis:            Benchmarks for bytestring
Description:
    This package is not meant for public release. It fixes a problem with the
    current benchmarking support in cabal, which has trouble compiling because
    gauge depends on bytestring. Here, we just include the whole source of
    the bytestring library directly.

License:             BSD-3-Clause
License-file:        LICENSE
Category:            Data
Copyright:           (c) Simon Meier          2010-2011.

Author:              Simon Meier
Maintainer:          Simon Meier <iridcode@gmail.com>
                     Duncan Coutts <duncan@community.haskell.org>
Bug-reports:         iridcode@gmail.com
                     duncan@community.haskell.org
Tested-With:         GHC==8.10.1, GHC==8.8.3, GHC==8.6.5, GHC==8.4.4, GHC==8.2.2,
                     GHC==8.0.2, GHC==7.10.3
Build-Type:          Simple

source-repository head
  type:     darcs
  location: http://darcs.haskell.org/bytestring/

flag integer-simple
  description: Use the simple integer library instead of GMP
  default: False

common bench-stanza
  hs-source-dirs:   . ..
  default-language: Haskell98

  other-modules:
        Data.ByteString
        Data.ByteString.Builder
        Data.ByteString.Builder.ASCII
        Data.ByteString.Builder.Extra
        Data.ByteString.Builder.Internal
        Data.ByteString.Builder.Prim
        Data.ByteString.Builder.Prim.ASCII
        Data.ByteString.Builder.Prim.Binary
        Data.ByteString.Builder.Prim.Internal
        Data.ByteString.Builder.Prim.Internal.Base16
        Data.ByteString.Builder.Prim.Internal.Floating
        Data.ByteString.Builder.Prim.Internal.UncheckedShifts
        Data.ByteString.Char8
        Data.ByteString.Internal
        Data.ByteString.Lazy
        Data.ByteString.Lazy.Internal
        Data.ByteString.Short.Internal
        Data.ByteString.Unsafe
  c-sources:         ../cbits/fpstring.c
                     ../cbits/itoa.c
  include-dirs:      ../include
  includes:          fpstring.h

  ghc-options:      -O2
                    -fmax-simplifier-iterations=10
                    -fdicts-cheap
                    -fspec-constr-count=6

  build-depends:     base >= 4.8 && < 5
                   , deepseq
                   , gauge         >= 0.2.5
                   , ghc-prim

  if impl(ghc >= 8.11)
    build-depends: ghc-bignum >= 1.0
  else
    if !flag(integer-simple)
      cpp-options: -DINTEGER_GMP
      build-depends: integer-gmp >= 0.2

benchmark bench-bytestring-builder
  import:           bench-stanza
  main-is:          BenchAll.hs
  type:             exitcode-stdio-1.0
  build-depends:    random

benchmark bench-builder-boundscheck
  import:           bench-stanza
  main-is:          BoundsCheckFusion.hs
  type:             exitcode-stdio-1.0

benchmark bench-builder-csv
  import:           bench-stanza
  main-is:          CSV.hs
  type:             exitcode-stdio-1.0
  build-depends:    bytestring, dlist, text, utf8-light, utf8-string

benchmark bench-strict-indices
  import:           bench-stanza
  main-is:          BenchIndices.hs
  type:             exitcode-stdio-1.0
